service: serverless-sample

plugins:
  - serverless-pseudo-parameters
  - serverless-aws-alias

provider:
  name: aws
  stage: 'test'
  apiKeys:
    - my-api-key-${self:provider.stage}
  runtime: python3.6
  timeout: 300
  environment:
    PYTHONPATH: "/var/runtime:/var/task/vendored"
    NAMESPACE: ${self:provider.stage}
    LOG_LEVEL: INFO
  iamRoleStatements:
  - Effect: Allow
    Action:
      - "dynamodb:*"
    Resource: "*"
  - Effect: Allow
    Action:
      - "sqs:*"
    Resource: "*"
  - Effect: Allow
    Action:
      - "lambda:*"
    Resource: "*"
  - Effect: Allow
    Action:
      - "sns:*"
    Resource: "*"
  -  Effect: "Allow"
     Action:
       - "sts:AssumeRole"
     Resource: "*"
  - Effect: "Allow"
    Action:
      - "kms:*"
    Resource: "*"
  - Effect: "Allow"
    Action:
      - "s3:*"
    Resource: "*"
  - Effect: "Allow"
    Action:
      - "athena:*"
    Resource: "*"
  - Effect: "Allow"
    Action:
      - "glue:*"
    Resource: "*"
functions:
  echo-handler:
    name: EchoHandler${self:provider.stage}
    handler: src/echo_handler.echo
    events:
      - http:
          path: echo
          method: post
          private: true

resources:
  Resources:
    MyTestTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: hash
            AttributeType: S
          - AttributeName: range
            AttributeType: S
        KeySchema:
          - AttributeName: hash
            KeyType: HASH
          - AttributeName: range
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: MyTestTable${self:provider.stage}
